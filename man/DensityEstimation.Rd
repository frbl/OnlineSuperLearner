% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DensityEstimation.R
\docType{class}
\name{DensityEstimation}
\alias{DensityEstimation}
\title{Density.Estimation
This class performs the actual density estimation for each of the random variables provided to it.}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
DensityEstimation
}
\description{
Density.Estimation
This class performs the actual density estimation for each of the random variables provided to it.
}
\section{Methods}{
 
\describe{  
  \item{\code{initialize(nbins = 30, bin_estimator = NULL, online = FALSE, verbose = FALSE) }}{ 
    Creates a new density estimator. One can provide various hyper parameters. First of all the number of bins the
    estimator uses can be configured, by default this is 30. Then one can define the actual estimator the density
    estimator uses for estimating the conditional densities. By default it uses speedglm. Finally, one can select
    whether to treat the algorithm as an online or batch algorithm. If online is set to false, we will keep a record
    of the data that has been used to train an estimator. Note that this is currently very inefficient.
    @param nbins integer the number of bins to use for the estimator
    @param bin_estimator ML.Base the actual estimator used for fitting the conditional density
    @param online boolean does the algorithm have an updating possibility? And should we treat it as online?
    @param verbose the verbosity
  } 

  \item{\code{predict(data, sample = FALSE, subset = NULL, plot = FALSE) }}{ 
    Method to perform the prediction on all (or a subset of) the random variables / conditional densities.
    @param data the data from which to predict the outcome.
    @param sample boolean would we like to sample a value (true) or a probability (false) from the conditional
    density
    @param subset stringarray do we want to perform predictions for all variables? (NULL), or just a subset thereof?
    @param plot boolean plot the predicted outcomes to a file in /tmp/osl
  } 

  \item{\code{process(data, randomVariables, update = FALSE) }}{ 
    Either fits or updates the conditional densities for each of the variables. 
    @param data the data to fit or update the bin estimation algorithm on.
    @param randomVariables list of RandomVariable objects. The randomvariables for which a density should be fit.
    @param update boolean is the current call an update or a fit? False = fit.
  } 

  \item{\code{getConditionalDensities(outcome = NULL) }}{ 
    Method to get all fitted conditional densities. By default it will return the full list of conditional densities
    (\code{outcome = NULL}), but if an outcome is provided a subset is returned a subset is returned. Note that if
    only a single variable is returned (e.g. \code{outcome = 'Y'}), it will return a single conditional density. If
    a vector of outcomes is provided it will return a list.
    @param outcome the outcome for which a conditional density needs to be returned.
    @return either all conditional densities, or a subset, or a single density.
  } 

  \item{\code{is_online()}}{
    Active method, returns whether the estimator is online or not
    @return boolean true if the estimator is fitted as an online estimator
  }

  \item{\code{get_bin_estimator()}}{
    Active method, Returns the algorithm that is used fot the bins. 
    @return ML.base the actual algorithm used to fit the density
  } 

  \item{\code{get_nbins()}}{
    Active method, the number of bins used to split the continuous density distribution 
    @return integer the number of bins
  }

  \item{\code{get_estimator_type()}}{
    Active method, returns a list with two elements. First \code{fitfunname} the name of the function used to fit the
    density, and \code{lmclass} the lmclass for each of the algorithms.
    @return the list with the \code{fitfunname} and the \code{lmclass}
  }
}
}

\keyword{datasets}
