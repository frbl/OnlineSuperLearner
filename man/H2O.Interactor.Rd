% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/H2O.Interactor.R
\docType{class}
\name{H2O.Interactor}
\alias{H2O.Interactor}
\title{H2O.Interactor}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
H2O.Interactor
}
\description{
Class used to interact with H2O, mainly for caching data. It keeps track off
all the data that has been uploaded to H2O, and returns the cached version
if it is already on H2O.
}
\section{Methods}{

\describe{
  \item{\code{initialized(verbose = FALSE, digest_algorithm = 'sha1')}}{
    Initializes a new h2o interactor. The provided digest algorithm is used
    to calculate unique hashes of data when storing it (and to looking it
    back up in the cache).

    @param verbose the verbosity to use
    @param digest_algorithm (default = 'sha1') string, the algorithm to use for the hashing
    @return a new intereactor
  }

  \item{\code{generate_hash(data)}}{
    Generates a checksum for a piece of data (e.g., datatable). This is used
    as a pointer to store the data under.

    @param data the data table to hash
    @return string the hash of the datatable
  }

  \item{\code{get_data_pointer(data)}}{
    Function that either uploads or reuses a dataset to H2O and returns the
    pointer to the data on H2O. It will always return a pointer to data on
    H2O.

    @param data the data to send to H2O.
    @return string the identifier on H2O.
  }

  \item{\code{add_and_return_data_hash(data)}}{
    Function that adds data to a specific hash location in the h2o cache. 

    @param hash string hash to use for caching the data.
    @param data the data to send to H2O.
    @return string the identifier on H2O.
  }

  \item{\code{get_h2o_objects()}}{
    Active method. Function that returns the raw h2o objects.

    @param hash string hash to use for caching the data.
    @param data the data to send to H2O.
    @return string the identifier on H2O.
  }
}
}

\keyword{datasets}
